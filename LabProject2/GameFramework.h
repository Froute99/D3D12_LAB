

#pragma once

class CGameFramework {
public:
	CGameFramework();
	~CGameFramework();
private:
	HINSTANCE m_hInstance;
	HWND m_hWnd;

	int m_nWndClientWidth;
	int m_nWndClientHeight;

	// DXGI 팩토리 인터페이스에 대한 포인터
	IDXGIFactory4* m_pdxgiFactory;
	// 스왑 체인 인터페이스에 대한 포인터. 주로 디스플레이를 제어하기 위해 필요
	IDXGISwapChain3 * m_pdxgiSwapChain;
	// Direct3D 디바이스 인터페이스에 대한 포인터. 주로 리소스를 생성하기 위해 필요
	ID3D12Device* m_pd3Device;

	bool m_bMsaa4xEnable = false;
	// MSAA 다중 샘플링을 활성화하고 다중 샘플링 레벨을 설정한다
	UINT m_nMsaa4xQualityLevels = 0;

	// 스왑 체인의 후면 버퍼의 개수이다
	static const UINT m_nSwapChainBuffers = 2;
	// 현재 스왑 체인의 후면 버퍼 인덱스이다
	UINT m_nSwapChainBufferIndex;

	// 렌더 타겟 버퍼 인터페이스 포인터
	ID3D12Resource* m_ppd3dRenderTargetBuffers[m_nSwapChainBuffers];
	// 서술자 힙 인터페이스 포인터
	ID3D12DescriptorHeap* m_pd3dRtvDescriptorHeap;
	// 렌더 타겟 서술자 원소의 크기
	UINT m_nRtvDescriptorIncrementSize;

	// 깊이-스텐실 버퍼 인터페이스 포인터
	ID3D12Resource* m_pd3dDepthStencilBuffer;
	// 서술자 힙 인터페이스 포인터
	ID3D12DescriptorHeap* m_pd3dDsvDescriptorHeap;
	// 깊이-스텐실 서술자 원소의 크기
	UINT m_nDsvDescriptorIncrementSize;

	// 명령 큐 인터페이스 포인터
	ID3D12CommandQueue* m_pd3dCommandQueue;
	// 명령 할당자 인터페이스 포인터
	ID3D12CommandAllocator* m_pd3dCommandAllocator;
	// 명령 리스트 인터페이스 포인터
	ID3D12GraphicsCommandList* m_pd3dCommandList;

	// 그래픽스 파이프라인 상태 객체에 대한 인터페이스 포인터
	ID3D12PipelineState* m_pd3dPipelineState;

	// 펜스 인터페이스 포인터
	ID3D12Fence* m_pd3dFence;
	// 펜스 값
	UINT64 m_nFenceValue;
	// 이벤트 핸들
	HANDLE m_hFenceEvent;

	// 뷰포트
	D3D12_VIEWPORT m_d3dViewport;
	// 씨저 사각형
	D3D12_RECT m_d3dScissorRect;
};

